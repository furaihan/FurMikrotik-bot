:local send [:parse [/system script get tg_sendMessage source]]
:local gkey [:parse [/system script get tg_getkey source]]
:local param1 [:pick $params 0 [:find $params " "]]
:local param2 [:pick $params ([:find $params " "]+1) [:len $params]]
:local param3 [:pick [:pick $params ([:find $params " "]+1) [:len $params]] ([:find [:pick $params ([:find $params " "]+1) [:len $params]] " "]+1) [:len [:pick $params ([:find $params " "]+1) [:len $params]]]]
:if ([:len [:find $param2 " "]]>0) do={
	:set param2 [:pick [:pick $params ([:find $params " "]+1) [:len $params]] 0 [:find [:pick $params ([:find $params " "]+1) [:len $params]] " "]]
} else={
	:set param3 ""
}


:local ConvertUpperCase do={
	:local alphabet {"a"="A";"b"="B";"c"="C";"d"="D";"e"="E";"f"="F";"g"="G";"h"="H";"i"="I";"j"="J";"k"="K";"l"="L";"m"="M";"n"="N";"o"="O";"p"="P";"q"="Q";"r"="R";"s"="S";"t"="T";"u"="U";"v"="V";"x"="X";"z"="Z";"y"="Y";"w"="W"};
	:local result
	:local character
	:for strings from=0 to=([:len $1] - 1) do={
		:local single [:pick $1 $strings]
		:set character ($alphabet->$single)
		:if ([:typeof $character] = "str") do={set single $character}
		:set result ($result.$single)
	}
	:return $result
}

:if ($params = "help") do={
	:local bantuan
	:set bantuan ("*Perintah Definisi*%0A")
	:set bantuan ($bantuan."Digunakan untuk mendefinisikan sebuah kata yang diberikan. Definisi diambil dari web [Kateglo](http://kateglo.com/) yang bersumber dari KBBI%0A%0A")
	:set bantuan ($bantuan."*Penggunaan: *%0A")
	:set bantuan ($bantuan."_/definisi <kata>_%0A")
	:set bantuan ($bantuan."Contoh: ``` /definisi hujan ```%0A%0A")
	:set bantuan ($bantuan."*Catatan: *%0A")
	:set bantuan ($bantuan.">	Fitur ini masih memiliki banyak bug, karena keterbatasan dalam penulisan skrip di RouterOS%0A")
	:set bantuan ($bantuan.">	Silahkan ketikkan kata yang didefinisikan dalam satu kata%0A%0A")
	:set bantuan ($bantuan."*Known Bugs:*%0A")
	:set bantuan ($bantuan.">	Apabila definisi dari kata yang diberikan terdapat tanda baca koma (,)maka yang akan dikirim di telegram adalah seluruh kalimat sebelum tanda koma tersebut%0A")
	:set bantuan ($bantuan.">	Tidak bisa mendefinisikan dua kata atau lebih seperti: _tanggung jawab, bumi hanguskan, bercerai berai, dll_%0A")
	$send chat=$chatid text=("$bantuan") mode="Markdown"
}

:if ( ([:typeof [:tostr $params]] = "str") and ([:len $param1] = 1) and ($params != "help") ) do={
	:do {
		:local a ([/tool fetch mode=http http-method=get url="http://kateglo.com/api.php\?format=json&phrase=$params" as-value output=user ]->"data");
		:local def [$gkey block="definition" key="def_text" text=$a];
		:local sample [$gkey block="definition" key="sample" text=$a];
		:local kat [$gkey block="kateglo" key="lex_class_name" text=$a];
		:local pepatah [$gkey block="proverbs" key="proverb" text=$a];
		:local pptmean [$gkey block="proverbs" key="meaning" text=$a];
		:put $def; put $kat; put $pepatah;
		:local paramsuppercase [$ConvertUpperCase $params]
		:local deftext;
		:set deftext ("* $paramsuppercase *%0A");
		:set deftext ($deftext."Jenis: $kat%0A");
		:set deftext ($deftext."Definisi: $def%0A");
		:if ( ($sample != "null") and ([:len $sample] > 0) ) do={ :set deftext ($deftext."Sampel: $sample%0A"); }
		:if ([:len $pepatah] > 0) do={ :set deftext ($deftext."Pepatah: _$pepatah_ ($pptmean)%0A")}
		:if ([:len $kat] > 0) do={
			$send chat=$chatid text=("$deftext") mode="Markdown"
		} else={
			$send chat=$chatid text=("Definisi $params tidak ditemukan") mode="Markdown"
		}
	} on-error={
		:local ertext ("*unknown error occurred*%0A");
		:local ertext ($ertext."Please try again later%0A%0A");
		:local ertext ($ertext."_Please be advised that this tool is still have some bugs due to Mikrotik RouterOS limitation itself, you can try this again but if you keep getting an error you can try to use another word_");
		$send chat=$chatid text=("$ertext") mode="Markdown"
	}
} else={
	:if ($params != "help") do={
		$send chat=$chatid text=("$params tidak bisa di-definisikan, silahkan ketik ``` /definisi help ``` untuk informasi lebih lanjut") mode="Markdown"
	}
}
