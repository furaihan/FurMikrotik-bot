:local hour [:pick [/system clock get time] 0 2];
:local hourx;
:local minute [:pick [/system clock get time] 3 5];
:local minutex;
:local second [:pick [/system clock get time] 6 8];
:local secondx;
:local hundred ("1$second");
:local hundred2 ("1$minute");
:local hundred3 ("1$hour");
:local utsec;
:local uthour;
:local utmin;
:local uptime [/system resource get uptime];
:if ([:len $uptime] = 10) do={:set utsec [:pick $uptime 8 10]; :set utmin [:pick $uptime 5 7]; :set uthour [:pick $uptime 2 4]};
:if ([:len $uptime] = 11) do={:set utsec [:pick $uptime 9 11]; :set utmin [:pick $uptime 6 8]; :set uthour [:pick $uptime 3 5]};
:if ([:len $uptime] = 12) do={:set utsec [:pick $uptime 10 12]; :set utmin [:pick $uptime 7 9]; :set uthour [:pick $uptime 4 6]};
:if ([:len $uptime] = 8) do={:set utsec [:pick $uptime 6 8]; :set utmin [:pick $uptime 3 5]; :set uthour [:pick $uptime 0 2]};
:if (([:len $uptime] != 12) and ([:len $uptime] != 10) and ([:len $uptime] != 11) and ([:len $uptime] != 8)) do={
    /log error message="Script error please contact the creator";
}
:local utsecx ([:pick $utsec 1].[:pick $utsec 0]);
:if (([:pick $hour 1] = [:pick $hour 0]) or ([:pick $minute 1] = [:pick $minute 0]) or ([:pick $second 1] = [:pick $second 0])) do={
    :set hourx (([:pick $hour 1].[:pick $hour 0]) + 1);
    :set minutex (([:pick $minute 1].[:pick $minute 0]) + 1);
    :set secondx (([:pick $second 1].[:pick $second 0]) + 8);
} else={
    :set hourx ([:pick $hour 1].[:pick $hour 0]);
    :set minutex ([:pick $minute 1].[:pick $minute 0]);
    :set secondx ([:pick $second 1].[:pick $second 0]);
}
:if ($hundred2 = $hundred) do={:set hundred2 ($hundred2 + $hour + 1)};
:if (($hundred3 = $hundred) or ($hundred3 = $hundred2)) do={ :set hundred3 ($hundred3 + $second)};
:if ($minute + $utsec - $hour < 5) do={
    :set utsec ($utsec + 25);
    :set minute ($minute + 60);
}
:local string
:if ($type = "string") do={
    :set string ("FbPTYV9mjUNF4JWq4y1tD6sjdak0t2m8EbvSOIJ5zSXx2zBzTdVbreMTTtYNu2n0y383CHqASakcmw3NnhAeU6szwSsSqasDaMytTnw0CEzglNhbMyfGUkHfQexNk5C0m4iICxIQm\
                XotuYvGvbJO5XhzGHt3Xb2al4chtzNvTBnniz9RfrdqzTQHixeLh1uvHJ1xP885MLm025D6vzBNmPLWl0GX64zXbABIWudpcfhzrcl2mg11FYXHYAdi5XggVblwizY9Rt4a2Utvmi1\
                mmhbtTX2gVntOh3jotnUOD5nB69d4bnnUGoth");
}
:if ($type = "integer") do={
    :set string ("857942409324079924597220765691387859683055723045203124933189298538729356872140414647102436510066373639151713513171131252244546015539855265455\
                5810892943759503660388434505376119325439189112229996798299967611622498655616397194432203904171831777728491020225711996450683469478597214223062\
                27212493834056443900559616751");
}

:local RandomString;
:set RandomString 	([:pick $string ($utsecx + $utmin)].[:pick $string ($utsecx + 50)].[:pick $string ($utsecx + $hour + 29)].[:pick $string ($utsecx)].\
                    [:pick $string ($utsec + 21)].[:pick $string ($second + utmin)].[:pick $string ($second + uthour + 100)].[:pick $string ($utsec + 29)].\
                    [:pick $string ($utsec + $hourx)].[:pick $string ($second + uthour + 1)].[:pick $string ($second + uthour)].[:pick $string ($secondx + $uthour)].\
                    [:pick $string ($minute + $utsec - $hour)].[:pick $string ($minute + $uthour + $secondx)].[:pick $string [:tonum ($hundred + $uthour)]].\
                    [:pick $string [:tonum ($hundred2 + $utsec)]].[:pick $string [:tonum $hundred3]].[:pick $string ($utmin + $hourx + $second)].\
                    [:pick $string ($hourx + $hour + $second)].[:pick $string ($secondx + $utsec)]);
:return $RandomString;